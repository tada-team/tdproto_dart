import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:tdproto_dart/tdproto_dart.dart';

part 'push_device.freezed.dart';
part 'push_device.g.dart';

/// Push device info.
@freezed
class PushDevice with _$PushDevice {
  const factory PushDevice({
    /// Type: android, ios, web, safari.
    @JsonKey(name: 'type') required String type,

    /// Device id generated by client library.
    @JsonKey(name: 'device_id') required String deviceId,

    /// Notification token.
    @JsonKey(name: 'notification_token') required String notificationToken,

    /// Notification token for VOIP (iOS only).
    @JsonKey(name: 'voip_notification_token') required String voipNotificationToken,

    /// Readable device name.
    @JsonKey(name: 'name') required String name,

    /// Send silently data pushes that must be fully processed by app. Must be true for modern mobile clients.
    @JsonKey(name: 'data_pushes') required bool dataPushes,

    /// Send badge value as data. Experimental.
    @JsonKey(name: 'data_badges') required bool dataBadges,

    /// deprecated.
    @JsonKey(name: 'allowed_notifications') required bool allowedNotifications,
  }) = _PushDevice;

  factory PushDevice.fromJson(Map<String, dynamic> json) => _$PushDeviceFromJson(json);
}
